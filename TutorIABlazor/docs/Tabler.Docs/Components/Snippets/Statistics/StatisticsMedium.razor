@using Tabler.Docs.Model.Evaluation
@using Tabler.Docs.Data.QuestionnaireService
@inject IQuestionnaireService _questionnaireService
<Card>
    <CardBody>
        <div class="d-flex align-items-center">
            <div class="subheader">FUNDAMENTOS DE FÍSICA I</div>
            <div class="ms-auto lh-1">
            </div>
        </div>
        <div class="h1 mb-3">@(RelativePercentage.ToString())%</div>
        <div class="d-flex mb-2">
            <div>Aprendizaje total</div>
            <div class="ms-auto">
                <span class="text-green d-inline-flex align-items-center lh-1">
                    @(RelativePercentage.ToString())% <Icon class="ms-1" Size="16" IconType="@TrendingIcon" />
                </span>
            </div>
        </div>
        <Progress Size="ProgressSize.Small" Percentage="@(PercentageBar)" />
    </CardBody>
</Card>

@code
{
    [Parameter] public int RelativePercentage { get; set; } = 10;
    [Parameter] public int PercentageBar { get; set; } = 5;
    IIconType TrendingIcon = TablerIcons.Trending_up;
    int UserId = 0;

    protected override void OnInitialized()
    {
        if (RelativePercentage < 0)
        {
            TrendingIcon = TablerIcons.Trending_down;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            UserId = await _localStorage.GetItemAsync<int?>("profile") ?? 0;
        }
    }
}